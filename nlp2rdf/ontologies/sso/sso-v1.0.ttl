@base  <http://nlp2rdf.lod2.eu/schema/sso/> .
@prefix sso: <http://nlp2rdf.lod2.eu/schema/sso/> .
@prefix str: <http://nlp2rdf.lod2.eu/schema/string/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .

<http://nlp2rdf.lod2.eu/schema/sso/> rdf:type owl:Ontology ;
    rdfs:label "Structured Sentence Ontology" ;
    rdfs:comment """The Structured Sentence Ontology (SSO) is build upon the String Ontology and additionally provides classes for three basic units: Sentences, Phrases and Words. Properties such as nextWord and previousWord can be used to express the relations between these units. Furthermore several properties are provided for the most common annotations. 1. in the form of simple annotations for words, i.e. stem, lemma, statistics, which are all datatype properties. 2. In the form of properties, that link to other ontologies (olia, scms) """ ;
    owl:imports <http://nlp2rdf.lod2.eu/schema/string/> .

<Sentence>
    rdfs:label "Sentence" ;
    rdfs:comment "A string that can be considered a sentence. Sentences with only one word are typed as Word and Sentence and have no disjointness." ;
    rdfs:subClassOf str:String ;
    a owl:Class .

<Word>
    rdfs:label "Word" ;
    rdfs:comment """A string that can be considered a word or a punctuation mark, the sentence 'He enters the room.' for example  has 5 words. In general, the division into :Words is done by an NLP Tokenizer. Instances of this class should be a string, that is a 'meaningful' unit of characters. The class has not been named 'Token' as the NLP definition of 'Token' is more similar to our definition of :String .   """;
    rdfs:subClassOf str:String ;
    a owl:Class .
    
<StopWord>
    rdfs:label "Stop Word" ;
    rdfs:comment """A string that can be considered a Stop Word, i.e. it does not contain usefull information for search and other tasks.""";
    rdfs:subClassOf <Word> ;
    a owl:Class .
    
<Phrase>
    rdfs:label "Phrase" ;
    rdfs:comment "A string that can be considered a phrase consists of at least 2 strings that are words. " ;
    rdfs:subClassOf str:String ;
    a owl:Class .

#####Properties between Sentences and Words

<sentence>
    a owl:ObjectProperty ;
    a owl:FunctionalProperty ;
    rdfs:subPropertyOf str:superString ;
    rdfs:domain <Word> ; 
    rdfs:range <Sentence> .

<word>
    a owl:ObjectProperty ;
    rdfs:subPropertyOf str:subString ;
    rdfs:domain <Sentence> ; 
    rdfs:range <Word> ;
    owl:inverseOf <sentence> .

<firstWord>
    a owl:ObjectProperty ;
    a owl:FunctionalProperty ;
    rdfs:domain <Sentence> ; 
    rdfs:range <Word> ;
    rdfs:subPropertyOf <word> . 
    
<lastWord>
    a owl:ObjectProperty ;
    a owl:FunctionalProperty ;
    rdfs:domain <Sentence> ; 
    rdfs:range <Word> ;
    rdfs:subPropertyOf <word> .


#####Properties between Phrases, Sentences and Words

<child>
    rdfs:subPropertyOf str:subString ;
    rdfs:domain <Phrase> ;
    owl:inverseOf <parent> ;
    a owl:ObjectProperty .

<parent>
    rdfs:subPropertyOf str:superString ;
    rdfs:range <Phrase> ;
    a owl:ObjectProperty .

#####Properties between Words
    
<nextWord>
    rdfs:comment "This property (and the others) can be used to traverse words, it can not be assumed that no gaps between words exist, i.e. string adjacency is not mandatory. " ;
    a owl:ObjectProperty ;
    a owl:FunctionalProperty ;
    rdfs:domain <Word> ; 
    rdfs:range <Word> ;
    rdfs:subPropertyOf <nextWordTrans> ;
    owl:inverseOf <previousWord> .
    
<nextWordTrans>
    rdfs:comment "see :nextWord " ;
    a owl:TransitiveProperty ;
    rdfs:domain <Word> ; 
    rdfs:range <Word> ;
    owl:inverseOf <previousWordTrans> .

<previousWord>
    rdfs:comment "see :nextWord " ;
    rdfs:subPropertyOf <previousWordTrans> ;
    a owl:FunctionalProperty ;
    rdfs:domain <Word> ; 
    rdfs:range <Word> ;
    a owl:ObjectProperty .
    
<previousWordTrans>
    rdfs:comment "see :nextWord " ;
    rdfs:domain <Word> ; 
    rdfs:range <Word> ;
    a owl:TransitiveProperty .

#####Properties between Sentences
    
<nextSentence>
    rdfs:comment "This property (and the others) can be used to traverse :Sentences, it can not be assumed that no gaps between Sentences exist, i.e. string adjacency is not mandatory. " ;
    a owl:ObjectProperty ;
    a owl:FunctionalProperty ;
    rdfs:domain <Sentence> ; 
    rdfs:range <Sentence> ;
    rdfs:subPropertyOf <nextSentenceTrans> ;
    owl:inverseOf <previousSentence> .
    
<nextSentenceTrans>
    rdfs:comment "see :nextWord " ;
    a owl:TransitiveProperty ;
    rdfs:domain <Word> ; 
    rdfs:range <Word> ;
    owl:inverseOf <previousWordTrans> .

<previousSentence>
    rdfs:comment "see :nextSentence " ;
    rdfs:subPropertyOf <previousSentenceTrans> ;
    a owl:FunctionalProperty ;
    rdfs:domain <Sentence> ; 
    rdfs:range <Sentence> ;
    a owl:ObjectProperty .
    
<previousSentenceTrans>
    rdfs:comment "see :nextSentence " ;
    rdfs:domain <Sentence> ; 
    rdfs:range <Sentence> ;
    a owl:TransitiveProperty .


#########simple annotation properties

<stem>
    rdfs:domain <Word> ;
    a owl:DatatypeProperty;
    rdfs:comment "The stem of a Word. " .

<lemma>
    rdfs:domain <Word> ;
    a owl:DatatypeProperty;
    rdfs:comment "The lemma of a Word. " .


<posTag>
    rdfs:domain <Word> ;
    a owl:DatatypeProperty;
    rdfs:comment "The pos tag of a Word. " .


<oliaLink>
    rdfs:domain <Word> ;
    a owl:ObjectProperty;
    rdfs:comment "The link to the OLiA Annotation model. " .
